const { Telegraf } = require('telegraf');
const bot = new Telegraf(process.env.BOT_TOKEN);
const { getTopFloodCars } = require('./copartApi');
const { formatCarCard } = require('../utils/formatCarCard');
const { getAllSubscriptions } = require('../db/models');

let sentCache = new Set(); // –ß—Ç–æ–±—ã –Ω–µ —Å–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ

const runNotifier = async () => {
  try {
    const subs = await getAllSubscriptions();
    const cars = await getTopFloodCars(); // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ getAllCars()

    for (const sub of subs) {
      const keyword = sub.keyword.toLowerCase();
      const matched = cars.filter((car) =>
        `${car.make} ${car.model}`.toLowerCase().includes(keyword)
      );

      for (const car of matched) {
        const key = `${sub.chatId}-${car.link}`;
        if (sentCache.has(key)) continue;

        const message = formatCarCard(car);
        await bot.telegram.sendMessage(sub.chatId, `üîî –ù–æ–≤—ã–π –ª–æ—Ç –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ "${sub.keyword}":\n${message}`);
        sentCache.add(key);
      }
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–µ:', err);
  }
};

module.exports = { runNotifier };